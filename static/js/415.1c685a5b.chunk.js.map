{"version":3,"file":"static/js/415.1c685a5b.chunk.js","mappings":"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","sources":["pages/Home.jsx","services/ThemoviedbApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/ThemoviedbApi';\n\nexport default function Home() {\n  const [status, setStatus] = useState('PENDING');\n  const [trendingMovie, setTrendingMovie] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(resp => {\n        setStatus('RESOLVED');\n        // Проверяем, что resp.results является массивом, прежде чем использовать его\n        if (Array.isArray(resp.results)) {\n          setTrendingMovie([...resp.results]);\n        } else {\n          // Обработка случая, когда resp.results не является массивом\n          setTrendingMovie([]);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setStatus('REJECTED');\n      });\n  }, []);\n\n  if (status === 'PENDING') {\n    return <p>Loading...</p>;\n  } else if (status === 'REJECTED') {\n    return <p>Failed to fetch data</p>;\n  } else if (status === 'RESOLVED') {\n    return (\n      <ul>\n        {trendingMovie.map(obj => (\n          <NavLink\n            style={{ display: 'block', marginBottom: '10px' }}\n            to={`movies/${obj.id}`}\n            key={obj.id}\n          >\n            {obj.title || obj.name}\n          </NavLink>\n        ))}\n      </ul>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = '3b6934ed0c52e5b57602e1d4aa10a490';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data; // Возвращаем весь объект response.data\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  // Проверяем, что response.data содержит свойство \"results\" и это является массивом\n  if (Array.isArray(response.data.results)) {\n    return response.data.results;\n  } else {\n    // Если \"results\" отсутствует или не является массивом, возвращаем пустой массив\n    return [];\n  }\n};\n"],"names":["Home","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","trendingMovie","setTrendingMovie","useEffect","getTrendingMovies","then","resp","Array","isArray","results","_toConsumableArray","catch","error","console","_jsx","children","map","obj","NavLink","style","display","marginBottom","to","concat","id","title","name","API_KEY","BASE_URL","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","data","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}