{"version":3,"file":"static/js/681.1f84687b.chunk.js","mappings":"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","sources":["components/Reviews.jsx","services/ThemoviedbApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/ThemoviedbApi';\n\nexport default function Cast() {\n  const [reviews, setReviews] = useState([]);\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(filmId)\n      .then(resp => {\n        // Проверяем, что у объекта resp есть свойство \"results\" и что это массив\n        if (Array.isArray(resp.results)) {\n          setReviews([...resp.results]);\n        } else {\n          // Обработка случая, когда свойство \"results\" отсутствует или не является массивом\n          setReviews([]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [filmId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              {author && <h3>Author: {author}</h3>}\n              {content && <p>{content}</p>}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '3b6934ed0c52e5b57602e1d4aa10a490';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data; // Возвращаем весь объект response.data\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  // Проверяем, что response.data содержит свойство \"results\" и это является массивом\n  if (Array.isArray(response.data.results)) {\n    return response.data.results;\n  } else {\n    // Если \"results\" отсутствует или не является массивом, возвращаем пустой массив\n    return [];\n  }\n};\n"],"names":["Cast","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","filmId","useParams","useEffect","getMovieReviews","then","resp","Array","isArray","results","_toConsumableArray","catch","error","console","log","_jsx","_Fragment","children","length","map","_ref","id","author","content","_jsxs","API_KEY","BASE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}