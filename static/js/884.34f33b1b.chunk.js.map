{"version":3,"file":"static/js/884.34f33b1b.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/ThemoviedbApi.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/ThemoviedbApi';\n\nexport default function MovieDetails() {\n  const { filmId } = useParams();\n  const [status, setStatus] = useState('IDLE');\n  const [data, setData] = useState({});\n\n  const location = useLocation();\n\n  const refLocationLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieDetails(filmId)\n      .then(resp => {\n        setStatus('RESOLVED');\n        setData({\n          backdrop_path: resp.backdrop_path,\n          original_title: resp.original_title,\n          overview: resp.overview,\n          vote_average: resp.vote_average,\n          genres: resp.genres.map(({ name }) => {\n            return name;\n          }),\n        });\n      })\n      .catch(error => console.log(error));\n  }, [filmId]);\n\n  if (status === 'RESOLVED') {\n    const { backdrop_path, original_title, vote_average, overview, genres } =\n      data;\n\n    const userScore = Math.round(vote_average * 10);\n\n    return (\n      <section>\n        <NavLink\n          to={refLocationLink.current}\n          style={{\n            display: 'block',\n            marginBottom: '10px',\n          }}\n        >\n          <button\n            style={{\n              backgroundColor: 'blue',\n              border: 'none',\n              color: '#fff',\n            }}\n          >\n            Go back\n          </button>\n        </NavLink>\n        <img\n          src={\n            backdrop_path\n              ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n              : 'https://via.placeholder.com/300x450'\n          }\n          alt={original_title}\n        />\n        <h1>{original_title}</h1>\n        <p>User Score: {userScore}%</p>\n        <h2>Owerview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.join(', ')}</p>\n        <div>\n          <h4>Additional information</h4>\n          <NavLink\n            to=\"cast\"\n            style={{\n              display: 'block',\n              marginBottom: '10px',\n            }}\n          >\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </div>\n        <div>\n          <Outlet />\n        </div>\n      </section>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = '3b6934ed0c52e5b57602e1d4aa10a490';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data; // Возвращаем весь объект response.data\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  // Проверяем, что response.data содержит свойство \"results\" и это является массивом\n  if (Array.isArray(response.data.results)) {\n    return response.data.results;\n  } else {\n    // Если \"results\" отсутствует или не является массивом, возвращаем пустой массив\n    return [];\n  }\n};\n"],"names":["MovieDetails","_location$state$from","_location$state","filmId","useParams","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","data","setData","location","useLocation","refLocationLink","useRef","state","from","useEffect","getMovieDetails","then","resp","backdrop_path","original_title","overview","vote_average","genres","map","_ref","name","catch","error","console","log","userScore","Math","round","_jsxs","children","_jsx","NavLink","to","current","style","display","marginBottom","backgroundColor","border","color","src","concat","alt","join","Outlet","API_KEY","BASE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","Array","isArray","results","_x4"],"sourceRoot":""}