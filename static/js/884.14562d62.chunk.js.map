{"version":3,"file":"static/js/884.14562d62.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/ThemoviedbApi.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/ThemoviedbApi';\n\nexport default function MovieDetails() {\n  const { filmId } = useParams();\n  const [status, setStatus] = useState('IDLE');\n  const [data, setData] = useState({});\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const refLocationLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieDetails(filmId)\n      .then(resp => {\n        setStatus('RESOLVED');\n        setData({\n          backdrop_path: resp.backdrop_path,\n          original_title: resp.original_title,\n          overview: resp.overview,\n          vote_average: resp.vote_average,\n          genres: resp.genres.map(({ name }) => {\n            return name;\n          }),\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Failed to fetch movie details.');\n      });\n  }, [filmId]);\n\n  if (status === 'IDLE') {\n    return <p>Loading...</p>;\n  } else if (error) {\n    return <p>{error}</p>;\n  } else if (status === 'RESOLVED') {\n    const { backdrop_path, original_title, vote_average, overview, genres } =\n      data;\n\n    const userScore = Math.round(vote_average * 10);\n\n    return (\n      <section>\n        <NavLink to={refLocationLink.current}>\n          <button\n            style={{\n              backgroundColor: 'blue',\n              border: 'none',\n              color: '#fff',\n              margin: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            Go back\n          </button>\n        </NavLink>\n        <img\n          src={\n            backdrop_path\n              ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n              : 'https://via.placeholder.com/300x450'\n          }\n          alt={original_title}\n        />\n        <h1>{original_title}</h1>\n        <p>User Score: {userScore}%</p>\n        <h2>Owerview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.join(', ')}</p>\n        <div>\n          <h4>Additional information</h4>\n          <NavLink\n            to=\"cast\"\n            style={{\n              display: 'block',\n              marginBottom: '10px',\n            }}\n          >\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </div>\n        <div>\n          <Outlet />\n        </div>\n      </section>\n    );\n  }\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_KEY = '3b6934ed0c52e5b57602e1d4aa10a490';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    toast.error('Failed to fetch movie details. Please go to the Home Page.', {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 5000,\n    });\n    throw new Error('Failed to fetch movie details.');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (Array.isArray(response.data.results)) {\n    return response.data.results;\n  } else {\n    return [];\n  }\n};\n"],"names":["MovieDetails","_location$state$from","_location$state","filmId","useParams","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","data","setData","_useState5","_useState6","error","setError","location","useLocation","refLocationLink","useRef","state","from","useEffect","getMovieDetails","then","resp","backdrop_path","original_title","overview","vote_average","genres","map","_ref","name","catch","console","log","_jsx","children","userScore","Math","round","_jsxs","NavLink","to","current","style","backgroundColor","border","color","margin","cursor","src","concat","alt","join","display","marginBottom","Outlet","API_KEY","BASE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","movieId","_context3","t0","toast","position","autoClose","Error","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","Array","isArray","results","_x4"],"sourceRoot":""}